@startuml

title __EXAMPLE's Class Diagram__\n

  namespace com.example {
    class com.example.Access {
        - accessId : int
        - type : String
        + Access()
        + Access()
        + getAccessId()
        + getType()
        + setAccessId()
        + setType()
        + toString()
    }
  }
  

  namespace com.example {
    class com.example.Amortization {
        - amortizationId : int
        - capital : int
        - monthCostAmort : double
        - monthPerAmort : double
        - yearCostAmort : double
        - yearPerAmort : double
        + Amortization()
        + Amortization()
        + getAmortizationId()
        + getCapital()
        + getMonthCostAmort()
        + getMonthPerAmort()
        + getYearCostAmort()
        + getYearPerAmort()
        + setAmortizationId()
        + setCapital()
        + setMonthCostAmort()
        + setMonthPerAmort()
        + setYearCostAmort()
        + setYearPerAmort()
        + toString()
    }
  }
  

  namespace com.example {
    class com.example.Capital {
        - capitalId : int
        - capitalName : String
        - capitalPrice : double
        - usefullLife : int
        + Capital()
        + Capital()
        + getCapitalId()
        + getCapitalName()
        + getCapitalPrice()
        + getUsefullLife()
        + setCapitalId()
        + setCapitalName()
        + setCapitalPrice()
        + setUsefullLife()
    }
  }
  

  namespace com.example {
    class com.example.DatabaseDriver {
        - sessionFactory : SessionFactory
        + DatabaseDriver()
        + create()
        + delete()
        + getByCriteria()
        + read()
        + update()
    }
  }
  

  namespace com.example {
    interface com.example.IDatabaseDriver {
        {abstract} + create()
        {abstract} + delete()
        {abstract} + getByCriteria()
        {abstract} + read()
        {abstract} + update()
    }
  }
  

  namespace com.example {
    class com.example.Main {
        {static} + main()
    }
  }
  

  namespace com.example {
    class com.example.ServerClientThread {
        + func : int
        ~ input : InputStream
        ~ output : OutputStream
        - clientDialog : Socket
        {static} - sessionFactory : SessionFactory
        + run()
        ~ ServerClientThread()
        - createAmortization()
    }
  }
  

  namespace com.example {
    class com.example.Status {
        - status : String
        - statusId : int
        + Status()
        + Status()
        + getStatus()
        + getStatusId()
        + setStatus()
        + setStatusId()
        + toString()
    }
  }
  

  namespace com.example {
    class com.example.Users {
        - access : int
        - login : String
        - password : String
        - status : int
        - userId : int
        + Users()
        + Users()
        + getAccess()
        + getLogin()
        + getPassword()
        + getStatus()
        + getUserId()
        + setAccess()
        + setLogin()
        + setPassword()
        + setStatus()
        + setUserId()
        + toString()
    }
  }
  

  com.example.DatabaseDriver .up.|> com.example.IDatabaseDriver


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
